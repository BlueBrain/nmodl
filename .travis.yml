#=============================================================================
# Travis NMODL settings
#=============================================================================

#=============================================================================
# Environment
#=============================================================================
# Use new Travis infrastructure (Docker can't sudo yet)
sudo: false

#=============================================================================
# Build matrix
#=============================================================================
matrix:
  fast_finish: true
  include:
    - language: cpp
      os: linux
      dist: bionic
      env:
        - MATRIX_EVAL="CXX=g++"
        - PYTHON_VERSION=3.8
    - language: cpp
      os: osx
      osx_image: xcode11.3
      env:
        - MATRIX_EVAL="CXX=c++"

#=============================================================================
# Cache directories
#=============================================================================
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew

#=============================================================================
# Common Packages
#=============================================================================
addons:
  # for Linux builds, we use APT
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - flex
      - bison
      - cmake
      - dvipng
      - doxygen
      - libboost-all-dev
      - libfl-dev
      - libopenmpi-dev
      - openmpi-bin
      - pandoc
      - python3-dev
      - python3-pip
      - texlive-base
  # for Mac builds, we use Homebrew
  homebrew:
    packages:
      - boost
      - cmake
      - flex
      - openmpi
      - python@3
    update: true

#=============================================================================
# Install dependencies
#=============================================================================
before_install:
  # brew installed flex and bison is not in $PATH
  # unlink python2 and use python3 as it's required for nmodl
  # install older bison because of #314
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/187c0d5/Formula/bison.rb;
        export PATH=/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH;
        brew unlink python@2;
        brew link --overwrite python@3.8;
        export SDKROOT="$(xcrun --show-sdk-path)";
    else
        pyenv global $PYTHON_VERSION;
    fi
  - eval "${MATRIX_EVAL}"

#=============================================================================
# Install NMODL dependencies
#=============================================================================
install:
  # there is a bug in m2r if sphinx>2.4.4. There is a pr in m2r to solve the
  # issue here: https://github.com/miyakogi/m2r/pull/55 . When it is done
  # I will remove the sphinx downgrade. Change setup.py requirements when it
  # be the case, Katta
  - echo "------- Install Dependencies -------"
  - pip3 install -U pip setuptools scikit-build Jinja2 PyYAML pytest "sympy<1.6"

#=============================================================================
# Build, test and install
#=============================================================================
script:
  - echo "------- Build, Test and Install -------"
  - mkdir build && pushd build
  - cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=$HOME/nmodl
  - make -j 2;
    if [ $? -ne 0 ]; then
      make VERBOSE=1;
    fi
  - env CTEST_OUTPUT_ON_FAILURE=1 make test
  - make install
  - popd

#=============================================================================
# Build Documentation, CoreNEURON and run tests
#=============================================================================
after_success:
  # Scikit-build does not support build_ext --inplace in custom commands.
  # More info at: https://github.com/scikit-build/scikit-build/issues/489
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      echo "------- Build Documentation -------";
      python3 setup.py build_ext --inplace docs -j 2 -G "Unix Makefiles" || travis_terminate 1;
      cd $TRAVIS_BUILD_DIR/_skbuild/linux-x86_64-3.8/setuptools/sphinx;
      rm -rf doctest doctrees && touch .nojekyll;
      echo "<meta http-equiv=\"refresh\" content=\"0; url=./html/index.html\" />" > index.html;
    fi

#=============================================================================
# Notifications
#=============================================================================
notifications:
  email:
    recipients: pramod.s.kumbhar@gmail.com
    on_success: change
    on_failure: always


#=============================================================================
# Documentation deployment
#=============================================================================
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  keep_history: false
  local_dir: $TRAVIS_BUILD_DIR/_skbuild/linux-x86_64-3.8/setuptools/sphinx/
  target_branch: gh-pages
  on:
    branch: master
    condition: $TRAVIS_OS_NAME = linux

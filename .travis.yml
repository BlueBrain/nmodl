#=============================================================================
# Travis NMODL settings
#=============================================================================

#=============================================================================
# Environment
#=============================================================================
# Use new Travis infrastructure (Docker can't sudo yet)
sudo: false

#=============================================================================
# Build matrix
#=============================================================================
matrix:
  fast_finish: true
  include:
    - language: cpp
      os: linux
      dist: xenial
      env:
        - GCC_VERSION=9
        - PYTHON_VERSION=3.6.7
    - language: cpp
      os: osx
      osx_image: xcode10.2

#=============================================================================
# Cache directories
#=============================================================================
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew

#=============================================================================
# Common Packages
#=============================================================================
addons:
  # for Linux builds, we use APT
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - flex
      - bison
      - libboost-all-dev
      - cmake
      - python3-dev
      - python3-pip
      - doxygen
      - pandoc
      - texlive-base
      - dvipng
      - g++-9
  # for Mac builds, we use Homebrew
  homebrew:
    packages:
      - boost
      - cmake
      - flex
      - python@3
    update: true

#=============================================================================
# Install dependencies / setup Spack
#=============================================================================
before_install:
  # brew installed flex and bison is not in $PATH
  # unlink python2 and use python3 as it's required for nmodl
  # install older bison because of #314
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/187c0d5/Formula/bison.rb;
        export PATH=/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH;
        brew unlink python@2;
        brew link --overwrite python;
    else
        pyenv global $PYTHON_VERSION;
        ls /usr/bin/;
    fi
  - eval "${MATRIX_EVAL}"

#=============================================================================
# Install NMODL dependencies
#=============================================================================
install:
  # there is a bug in m2r if sphinx>2.4.4. There is a pr in m2r to solve the
  # issue here: https://github.com/miyakogi/m2r/pull/55 . When it is done
  # I will remove the sphinx downgrade. Change setup.py requirements when it
  # be the case, Katta
  - echo "------- Install Dependencies -------"
  - pip3 install -U pip setuptools
  - pip3 install Jinja2 PyYAML pytest sympy --user
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      pip3 install -U --user sphinx==2.4.4 nbsphinx>=0.3.2 m2r sphinx-rtd-theme jupyter;
    fi

#=============================================================================
# Build, test and install
#=============================================================================
script:
  - echo "------- Build, Test and Install -------"
  - mkdir build && cd build
  - cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=$HOME/nmodl
  - make -j 2
  - make test
  - make install

#=============================================================================
# Build Documentation, CoreNEURON and run tests
#=============================================================================
after_success:
  - export PYTHONPATH=$HOME/nmodl/lib/python:$PYTHONPATH
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      echo "------- Build Documentation -------";
      cd $TRAVIS_BUILD_DIR/docs;
      doxygen && make html;
      rm -rf _build/doctrees && touch _build/.nojekyll;
      echo "<meta http-equiv=\"refresh\" content=\"0; url=./html/index.html\" />" > _build/index.html;
    fi
  - echo "------- Build and Test CoreNEURON -------"
  - cd $HOME
  - git clone --recursive https://github.com/BlueBrain/CoreNeuron.git
  - mkdir CoreNeuron/build && cd CoreNeuron/build
  - cmake .. -DCORENRN_ENABLE_MPI=OFF -DCORENRN_ENABLE_NMODL=ON -DCORENRN_NMODL_DIR=$HOME/nmodl -DCORENRN_NMODL_FLAGS="sympy --analytic"
  - make -j
  - make test

#=============================================================================
# Notifications
#=============================================================================
notifications:
  email:
    recipients: pramod.s.kumbhar@gmail.com
    on_success: change
    on_failure: always


#=============================================================================
# Documentation deployment
#=============================================================================
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  keep_history: false
  local_dir: $TRAVIS_BUILD_DIR/docs/_build/
  target_branch: gh-pages
  on:
    branch: master
    condition: $TRAVIS_OS_NAME = linux

name: Build wheels

on:
  push:
    branches:
      - master
  pull_request:
 schedule:
    - cron: "5 0 * * *"
    branches:
      - master
  workflow_dispatch:

jobs:
  build_wheels_nonlinux:
    name: Build wheels on ${{ matrix.os }}
    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-13, macOS-14]

    steps:
      - name: Setup Flex and Bison
        if: runner.os == 'Windows'
        run: |
          choco install winflexbison3 -y

      - name: Setup Flex and Bison
        if: runner.os == 'macOS'
        run: |
          brew install flex bison

      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5

      - name: Build all wheels
        run: |
          export SETUPTOOLS_SCM_PRETEND_VERSION="$(git describe --tags | cut -d '-' -f 1,2 | tr - .)"
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_wheels_manylinux:
    name: Build manylinux wheels
    timeout-minutes: 45
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5

      - name: Build wheels
        run: |
          export SETUPTOOLS_SCM_PRETEND_VERSION="$(git describe --tags | cut -d '-' -f 1,2 | tr - .)"
          CIBW_ENVIRONMENT_PASS_LINUX='SETUPTOOLS_SCM_PRETEND_VERSION' python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-manylinux
          path: ./wheelhouse/*.whl

  # testing of wheels cannot be done in a manylinux image due to the lack of
  # the Python library; as a workaround, we test each wheel in a separate
  # version
  test_wheels_manylinux:
    name: Test manylinux wheel on Python ${{ matrix.python_version }}
    runs-on: ubuntu-latest
    needs: build_wheels_manylinux
    timeout-minutes: 45
    strategy:
      matrix:
        python_version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    depends-on: manylinux_wheels
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make manylinux wheels available
        uses: actions/download-artifact@v2
        with:
          name: cibw-wheels-manylinux

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}

      - name: Test manylinux Wheel with Python ${{ matrix.python_version }}
        run: |
          set -eux
          dotless_version="$(echo "${matrix.python_version}" | tr -d '.')"
          find ${{ github.workspace }} -name "*cp${dotless_version}-manylinux*.whl" -exec bash packaging/test_wheel.bash python${{ matrix.python_version }} {} \;

#pragma once


/* Abstract base class for all visitor implementations */
class Visitor {

    public:
        virtual void visitStatement(Statement* node) = 0;
        virtual void visitExpression(Expression* node) = 0;
        virtual void visitBlock(Block* node) = 0;
        virtual void visitIdentifier(Identifier* node) = 0;
        virtual void visitNumber(Number* node) = 0;
        virtual void visitString(String* node) = 0;
        virtual void visitInteger(Integer* node) = 0;
        virtual void visitFloat(Float* node) = 0;
        virtual void visitDouble(Double* node) = 0;
        virtual void visitBoolean(Boolean* node) = 0;
        virtual void visitName(Name* node) = 0;
        virtual void visitPrimeName(PrimeName* node) = 0;
        virtual void visitVarName(VarName* node) = 0;
        virtual void visitIndexedName(IndexedName* node) = 0;
        virtual void visitArgument(Argument* node) = 0;
        virtual void visitReactVarName(ReactVarName* node) = 0;
        virtual void visitReadIonVar(ReadIonVar* node) = 0;
        virtual void visitWriteIonVar(WriteIonVar* node) = 0;
        virtual void visitNonspeCurVar(NonspeCurVar* node) = 0;
        virtual void visitElectrodeCurVar(ElectrodeCurVar* node) = 0;
        virtual void visitSectionVar(SectionVar* node) = 0;
        virtual void visitRangeVar(RangeVar* node) = 0;
        virtual void visitGlobalVar(GlobalVar* node) = 0;
        virtual void visitPointerVar(PointerVar* node) = 0;
        virtual void visitBbcorePointerVar(BbcorePointerVar* node) = 0;
        virtual void visitExternVar(ExternVar* node) = 0;
        virtual void visitThreadsafeVar(ThreadsafeVar* node) = 0;
        virtual void visitParamBlock(ParamBlock* node) = 0;
        virtual void visitStepBlock(StepBlock* node) = 0;
        virtual void visitIndependentBlock(IndependentBlock* node) = 0;
        virtual void visitDependentBlock(DependentBlock* node) = 0;
        virtual void visitStateBlock(StateBlock* node) = 0;
        virtual void visitPlotBlock(PlotBlock* node) = 0;
        virtual void visitInitialBlock(InitialBlock* node) = 0;
        virtual void visitConstructorBlock(ConstructorBlock* node) = 0;
        virtual void visitDestructorBlock(DestructorBlock* node) = 0;
        virtual void visitStatementBlock(StatementBlock* node) = 0;
        virtual void visitDerivativeBlock(DerivativeBlock* node) = 0;
        virtual void visitLinearBlock(LinearBlock* node) = 0;
        virtual void visitNonLinearBlock(NonLinearBlock* node) = 0;
        virtual void visitDiscreteBlock(DiscreteBlock* node) = 0;
        virtual void visitPartialBlock(PartialBlock* node) = 0;
        virtual void visitFunctionTableBlock(FunctionTableBlock* node) = 0;
        virtual void visitFunctionBlock(FunctionBlock* node) = 0;
        virtual void visitProcedureBlock(ProcedureBlock* node) = 0;
        virtual void visitNetReceiveBlock(NetReceiveBlock* node) = 0;
        virtual void visitSolveBlock(SolveBlock* node) = 0;
        virtual void visitBreakpointBlock(BreakpointBlock* node) = 0;
        virtual void visitTerminalBlock(TerminalBlock* node) = 0;
        virtual void visitBeforeBlock(BeforeBlock* node) = 0;
        virtual void visitAfterBlock(AfterBlock* node) = 0;
        virtual void visitBABlock(BABlock* node) = 0;
        virtual void visitForNetcon(ForNetcon* node) = 0;
        virtual void visitKineticBlock(KineticBlock* node) = 0;
        virtual void visitMatchBlock(MatchBlock* node) = 0;
        virtual void visitUnitBlock(UnitBlock* node) = 0;
        virtual void visitConstantBlock(ConstantBlock* node) = 0;
        virtual void visitNeuronBlock(NeuronBlock* node) = 0;
        virtual void visitUnit(Unit* node) = 0;
        virtual void visitDoubleUnit(DoubleUnit* node) = 0;
        virtual void visitLocalVariable(LocalVariable* node) = 0;
        virtual void visitLimits(Limits* node) = 0;
        virtual void visitNumberRange(NumberRange* node) = 0;
        virtual void visitPlotVariable(PlotVariable* node) = 0;
        virtual void visitBinaryOperator(BinaryOperator* node) = 0;
        virtual void visitUnaryOperator(UnaryOperator* node) = 0;
        virtual void visitReactionOperator(ReactionOperator* node) = 0;
        virtual void visitBinaryExpression(BinaryExpression* node) = 0;
        virtual void visitUnaryExpression(UnaryExpression* node) = 0;
        virtual void visitNonLinEuation(NonLinEuation* node) = 0;
        virtual void visitLinEquation(LinEquation* node) = 0;
        virtual void visitFunctionCall(FunctionCall* node) = 0;
        virtual void visitFirstLastTypeIndex(FirstLastTypeIndex* node) = 0;
        virtual void visitWatch(Watch* node) = 0;
        virtual void visitQueueExpressionType(QueueExpressionType* node) = 0;
        virtual void visitMatch(Match* node) = 0;
        virtual void visitBABlockType(BABlockType* node) = 0;
        virtual void visitUnitDef(UnitDef* node) = 0;
        virtual void visitFactorDef(FactorDef* node) = 0;
        virtual void visitValence(Valence* node) = 0;
        virtual void visitUnitState(UnitState* node) = 0;
        virtual void visitLocalListStatement(LocalListStatement* node) = 0;
        virtual void visitModel(Model* node) = 0;
        virtual void visitDefine(Define* node) = 0;
        virtual void visitInclude(Include* node) = 0;
        virtual void visitParamAssign(ParamAssign* node) = 0;
        virtual void visitStepped(Stepped* node) = 0;
        virtual void visitIndependentDef(IndependentDef* node) = 0;
        virtual void visitDependentDef(DependentDef* node) = 0;
        virtual void visitPlotDeclaration(PlotDeclaration* node) = 0;
        virtual void visitConductanceHint(ConductanceHint* node) = 0;
        virtual void visitExpressionStatement(ExpressionStatement* node) = 0;
        virtual void visitProtectStatement(ProtectStatement* node) = 0;
        virtual void visitFromStatement(FromStatement* node) = 0;
        virtual void visitForAllStatement(ForAllStatement* node) = 0;
        virtual void visitWhileStatement(WhileStatement* node) = 0;
        virtual void visitIfStatement(IfStatement* node) = 0;
        virtual void visitElseIfStatement(ElseIfStatement* node) = 0;
        virtual void visitElseStatement(ElseStatement* node) = 0;
        virtual void visitPartialEquation(PartialEquation* node) = 0;
        virtual void visitPartialBoundary(PartialBoundary* node) = 0;
        virtual void visitWatchStatement(WatchStatement* node) = 0;
        virtual void visitMutexLock(MutexLock* node) = 0;
        virtual void visitMutexUnlock(MutexUnlock* node) = 0;
        virtual void visitReset(Reset* node) = 0;
        virtual void visitSens(Sens* node) = 0;
        virtual void visitConserve(Conserve* node) = 0;
        virtual void visitCompartment(Compartment* node) = 0;
        virtual void visitLDifuse(LDifuse* node) = 0;
        virtual void visitReactionStatement(ReactionStatement* node) = 0;
        virtual void visitLagStatement(LagStatement* node) = 0;
        virtual void visitQueueStatement(QueueStatement* node) = 0;
        virtual void visitConstantStatement(ConstantStatement* node) = 0;
        virtual void visitTableStatement(TableStatement* node) = 0;
        virtual void visitNrnSuffix(NrnSuffix* node) = 0;
        virtual void visitNrnUseion(NrnUseion* node) = 0;
        virtual void visitNrnNonspecific(NrnNonspecific* node) = 0;
        virtual void visitNrnElctrodeCurrent(NrnElctrodeCurrent* node) = 0;
        virtual void visitNrnSection(NrnSection* node) = 0;
        virtual void visitNrnRange(NrnRange* node) = 0;
        virtual void visitNrnGlobal(NrnGlobal* node) = 0;
        virtual void visitNrnPointer(NrnPointer* node) = 0;
        virtual void visitNrnBbcorePtr(NrnBbcorePtr* node) = 0;
        virtual void visitNrnExternal(NrnExternal* node) = 0;
        virtual void visitNrnThreadSafe(NrnThreadSafe* node) = 0;
        virtual void visitVerbatim(Verbatim* node) = 0;
        virtual void visitComment(Comment* node) = 0;
        virtual void visitProgram(Program* node) = 0;
};

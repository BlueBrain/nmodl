/*************************************************************************
 * Copyright (C) 2018-2019 Blue Brain Project
 *
 * This file is part of NMODL distributed under the terms of the GNU
 * Lesser General Public License. See top-level LICENSE file for details.
 *************************************************************************/

#pragma once

#include "ast/ast.hpp"
#include "parser/unit_driver.hpp"
#include "visitors/ast_visitor.hpp"
#include "visitors/visitor_utils.hpp"
#include <experimental/filesystem>
#include <sstream>
#include <string>
#include <vector>

namespace nmodl {

/**
 * \class UnitsVisitor
 * \brief Visitor for Units blocks of AST
 *
 * This is simple example of visitor that uses base AstVisitor
 * interface. We override visit_program, visit_unit_def and visit_factor_def method.
 * Furthermore it keeps the UnitDriver to parse the units file and the
 * strings generated by the units in the mod files.
 */

class UnitsVisitor: public AstVisitor {
  private:
    /// flag to enable/disable printing nodes and the produced strings that are passed to the unit
    /// parser as we visit them
    bool verbose = false;

    /// Units Driver needed to parse the units file and the string produces by mod files' units
    parser::UnitDriver unit_driver;

    /// Stringstream to store the units details that are added by the mod files
    std::stringstream* units_details;

    /// Directory of units lib file that defines all the basic units
    std::string units_dir;

  public:
    /// Default UnitsVisitor constructor
    UnitsVisitor() = default;

    /// UnitsVisitor constructor that instantiates a stringstream to store the tests output and
    /// takes as argument the units file to parse the units from
    UnitsVisitor(std::string& t_units_dir, std::stringstream& t_units_details)
        : verbose(true)
        , units_dir(t_units_dir)
        , units_details(&t_units_details) {}

    /// UnitsVisitor constructor that takes as argument the units file to parse the units from
    UnitsVisitor(std::string& t_units_dir)
        : units_dir(t_units_dir) {}

    /// Function to visit all the UnitDef nodes and parse the units defined as UnitDef in the UNITS
    /// block of mod files
    void visit_unit_def(ast::UnitDef* node) override;
    /// Function to visit all the FactorDef nodes and parse the units defined as FactorDef in the
    /// UNITS block of mod files
    void visit_factor_def(ast::FactorDef* node) override;
    /// Override visit_program function to parse the nrnunits.lib unit file before starting visiting
    /// the AST to parse the units defined in mod files
    void visit_program(ast::Program* node) override;
};

}  // namespace nmodl
